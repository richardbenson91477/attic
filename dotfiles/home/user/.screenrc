# original c/o https://gist.github.com/joaopizani/2718397
#
defscrollback 5000
startup_message off
deflogin on
#autodetach off
vbell on
vbell_msg "   Wuff  ----  Wuff!!  "
mousetrack on

# the following two lines give a two-line status, with the current window highlighted
hardstatus alwayslastline
hardstatus string '%{= kG}[%{G}%H%? %1`%?%{g}][%= %{= kw}%-w%{+b yk} %n*%t%?(%u)%? %{-}%+w %=%{g}][%{B}%m/%d %{W}%C%A%{g}]'

# default windows
screen -t Shell1    1 bash -l
screen -t Shell2    3 bash -l
#screen -t Vim       2 vim
#screen -t ISympy    4 isympy
#select 0
#bind c screen 1 # window numbering starts at 1 not 0
#bind 0 select 10
#bind s split

# layouts
#layout autosave on
#layout new one
#select 1
#layout new two
#select 1
#split
#resize -v +8
#focus down
#select 4
#focus up
#layout new three
#select 1
#split
#resize -v +7
#focus down
#select 3
#split -v
#resize -h +10
#focus right
#select 4
#focus up

#layout attach one
#layout attach two
#layout attach three
#layout select two

# switch windows with F3 (prev) and F4 (next)
bindkey "^[OR" prev
bindkey "^[OS" next

# switch layouts with F5 (prev layout) and F6 (next)
bindkey "^[[15~" layout prev
bindkey "^[[17~" layout next

# F2 puts Screen into resize mode. Resize regions using hjkl keys.
bindkey "^[OQ" eval "command -c rsz" # enter resize mode

# use hjkl keys to resize regions
bind -c rsz h eval "resize -h -5" "command -c rsz"
bind -c rsz j eval "resize -v -5" "command -c rsz"
bind -c rsz k eval "resize -v +5" "command -c rsz"
bind -c rsz l eval "resize -h +5" "command -c rsz"

# quickly switch between regions using tab and arrows
#bind -c rsz \t    eval "focus"       "command -c rsz" # Tab
#bind -c rsz -k kl eval "focus left"  "command -c rsz" # Left
#bind -c rsz -k kr eval "focus right" "command -c rsz" # Right
#bind -c rsz -k ku eval "focus up"    "command -c rsz" # Up
#bind -c rsz -k kd eval "focus down"  "command -c rsz" # Down

# F1 
bindkey "^[OP" focus
# navigating regions with Ctrl-arrows
#bindkey "^[[1;5D" focus left
#bindkey "^[[1;5C" focus right
#bindkey "^[[1;5A" focus up
#bindkey "^[[1;5B" focus down

termcap  vt100|xterm LP:G0
terminfo vt100|xterm LP:G0
termcap  vt100 dl=5\E[M
terminfo vt100 dl=5\E[M
#xterm understands both im/ic and doesn't have a status line.
#Note: Do not specify im and ic in the real termcap/info file as
#some programs (e.g. vi) will (no,no, may (jw)) not work anymore.
termcap  xterm hs@:cs=\E[%i%d;%dr:im=\E[4h:ei=\E[4l
terminfo xterm hs@:cs=\E[%i%p1%d;%p2%dr:im=\E[4h:ei=\E[4l
# we do not want the width to change to 80 characters on startup:
# on suns, /etc/termcap has :is=\E[r\E[m\E[2J\E[H\E[?7h\E[?1;3;4;6l:
termcap xterm 'is=\E[r\E[m\E[2J\E[H\E[?7h\E[?1;4;6l'
terminfo xterm 'is=\E[r\E[m\E[2J\E[H\E[?7h\E[?1;4;6l'
#
# Do not use xterms alternate window buffer. 
# This one would not add lines to the scrollback buffer.
termcap xterm ti=\E7\E[?47l
terminfo xterm ti=\E7\E[?47l

# 256 colors
attrcolor b ".I"
termcapinfo xterm 'Co#256:AB=\E[48;5;%dm:AF=\E[38;5;%dm'

